name: Image Security Pipeline

on:
  push:
    branches:
      - main  # Adjust the branch as needed

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Scipt to Download and install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.45.1

    - name: Create trivy-reports directory
      run: mkdir -p trivy-reports
      shell: bash

    - name: Scan images and generate reports
      run: |
        # Define the list of image names you want to scan
        images=("alpine:latest" "nginx:latest" "ubuntu:latest" "python:latest" "redis:latest" "postgres:latest" "node:latest" "httpd:latest" "memcached:latest" "mongo:latest" "mysql:latest" "traefik:latest" "mariadb:latest" "docker:latest" "rabbitmq:latest" "golang:latest" "wordpress:latest" "php:latest" "sonarqube:latest" "ruby:latest" "haproxy:latest" "tomcat:latest" "kong:latest" "neo4j:latest")
        current_date=$(date +'%Y-%m-%d')
        for image in "${images[@]}"; do
          sanitized_name="${image//:/_}"
          echo "Scanning $image"
          trivy image -f json -o "trivy-reports/$sanitized_name.json" "$image"
          jq 'del(.Metadata.DiffIDs)' "trivy-reports/$sanitized_name.json" > "trivy-reports/$sanitized_name-no-diffid.json" && mv "trivy-reports/$sanitized_name-no-diffid.json" "trivy-reports/$sanitized_name.json"

          # jq -c '.' "trivy-reports/$sanitized_name.json" > "trivy-reports/$sanitized_name.ndjson" && mv "trivy-reports/$sanitized_name.ndjson" "trivy-reports/$sanitized_name.json"

        done
      shell: bash

    - name: Upload Trivy Reports
      uses: actions/upload-artifact@v2
      with:
        name: trivy-reports
        path: trivy-reports

    - name: Set up AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region eu-north-1
      shell: bash
    
    - name: Python manipulation
      run: |
        import json 
        import re 

        image_name_pattern = r'ArtifactName: (.*?),'
        image_version_pattern = r'ArtifactName: (.*?),'
        image_Vulnerability_pattern = r'"Vulnerabilities": [{ (.*?)},{'

        for report in trivy-reports/*.json; do
          with open('data.json', 'r') as json_file:
            data = json.load(json_file)
            echo "data is {0}".format(data)
            
            # convert to a string
            json_string = json.dumps(data)
            echo json_string

            json_string = json_string.replace(" ", "")
            echo "string without spaces {0}".format(json_string)
            json_string = json_string.replace("\n ", "")
            echo "string without spaces and newlines{0}".format(json_string)
        done
      shell: bash


    # - name: Upload Trivy Reports to Amazon S3
    #   run: |
    #     # Define the S3 bucket and folder (prefix) where you want to upload the reports
    #     s3_bucket="imagereportbucket"
    #     current_date=$(date +'%Y-%m-%d')
    #     # Define the S3 prefix, including the current date
    #     s3_prefix="trivy-reports-${current_date}/"
  
    #     # Loop through the reports and upload them to S3
    #     for report in trivy-reports/*.json; do
    #       aws s3 cp "$report" "s3://$s3_bucket/$s3_prefix$(basename $report)"
    #     done
    #   shell: bash